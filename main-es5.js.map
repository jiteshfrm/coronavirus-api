{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common.utility.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CommonUtilityServices","http","apiUrl","apiIndia","apiDistrict","get","providedIn","HomeComponent","utility","allCountry","getGloablData","getAllCountryData","getIndiaData","getGlobalData","subscribe","resp","console","log","totalCases","cases","totalDeaths","deaths","totalRecoverd","recovered","getCountryData","push","filter","respArry","country","indiaData","recoverPer","Math","trunc","deathPer","state","getDistrict","key","hasOwnProperty","element","dkey","district","districtData","Object","entries","statewise","indiaTotalCases","statewiseData","shift","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'coronavirus-liveupdate';\n}\n","<app-home></app-home>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommonUtilityServices {\r\n    constructor(private http:HttpClient) {}\r\n    apiUrl = 'https://coronavirus-19-api.herokuapp.com/';\r\n    apiIndia = \"https://api.covid19india.org/data.json\";\r\n    apiDistrict = 'https://api.covid19india.org/state_district_wise.json';\r\n\r\n    getGlobalData(){\r\n        return this.http.get(this.apiUrl + 'all');\r\n    }\r\n\r\n    getCountryData() {\r\n        return this.http.get(this.apiUrl + 'countries');\r\n    } \r\n    getIndiaData(){\r\n        return this.http.get(this.apiIndia);\r\n    }\r\n    getDistrict(){\r\n        return this.http.get(this.apiDistrict);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { CommonUtilityServices } from '../common.utility.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private utility:CommonUtilityServices) { }\n  globalData:any;\n  totalCases:number;\n  totalDeaths:number;\n  totalRecoverd:number;\n  indiaData: any;\n  recoverPer: number;\n  deathPer:number;\n  allCountry:any = [];\n  indiaTotalCases:any;\n  statewiseData:any;\n  districtData:any;\n  ngOnInit(): void {\n    this.getGloablData();\n    this.getAllCountryData();\n    this.getIndiaData();\n  }\n\n  getGloablData() {\n    return this.utility.getGlobalData().subscribe((resp:any) => {\n      console.log(resp);\n      this.totalCases = resp.cases;\n      this.totalDeaths = resp.deaths;\n      this.totalRecoverd = resp.recovered;\n    });\n  }\n\n  getAllCountryData(){\n    return this.utility.getCountryData().subscribe((resp:any) => {\n      this.allCountry.push(resp);\n      resp.filter((respArry:any) => {\n        if( respArry.country == 'India') {\n          console.log(respArry);\n          this.indiaData = respArry;\n          this.recoverPer = Math.trunc((this.indiaData.recovered/this.indiaData.cases) * 100);\n          this.deathPer = Math.trunc((this.indiaData.deaths/this.indiaData.cases) * 100);\n        }\n      })\n\n    })\n  }\n\n  getDistrict(state:string){\n    return this.utility.getDistrict().subscribe((resp:any) => {\n      //console.log(state);\n      for (const key in resp) {\n        if (resp.hasOwnProperty(state)) {\n          const element = resp[state];\n          if(key == state){\n            for (const dkey in element) {\n              if (element.hasOwnProperty(dkey)) {\n                const district = element[dkey];\n                this.districtData = Object.entries(district)\n              }\n            }\n          }\n        }\n      }\n      console.log(this.districtData);\n    })\n  }\n\n  getIndiaData(){\n    return this.utility.getIndiaData().subscribe((resp:any) => {\n      console.log(resp.statewise);\n      this.indiaTotalCases = resp.statewise[0];\n      this.statewiseData = resp.statewise;\n      this.statewiseData.shift();\n    })\n  }\n}\n","<nav class=\"navbar  navbar-dark navbar-expand-sm\">\n\n    <a class=\"navbar-brand\" href=\"javascript:void(0)\" style=\"color: #333; font-size: 12px;font-style: italic;\">\n      <img src=\"assets/images/jplogo.jpg\" alt=\"logobird\" style=\"width:40px;margin-top:-5px\">\n      <span>Develop By JiteshKumar Prajapati</span>\n    </a>\n  </nav>\n<div class=\"container-fluid\">\n    <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">CORONAVIRUS - Global Total Cases</h1>\n    </div>\n    <div class=\"row\">\n  \n      <!-- Earnings (Monthly) Card Example -->\n      <div class=\"col-xl-4 col-md-6 mb-4\">\n        <div class=\"card border-left-primary shadow h-100 py-2\">\n          <div class=\"card-body\">\n            <div class=\"row no-gutters align-items-center\">\n              <div class=\"col mr-2\">\n                <div class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Coronavirus Cases:</div>\n                <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{totalCases}}</div>\n              </div>\n              <div class=\"col-auto\">\n                <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  \n      <!-- Pending Requests Card Example -->\n      <div class=\"col-xl-4 col-md-6 mb-4\">\n        <div class=\"card border-left-warning shadow h-100 py-2\">\n          <div class=\"card-body\">\n            <div class=\"row no-gutters align-items-center\">\n              <div class=\"col mr-2\">\n                <div class=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">Deaths</div>\n                <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{totalDeaths}}</div>\n              </div>\n              <div class=\"col-auto\">\n                <i class=\"fas fa-comments fa-2x text-gray-300\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  \n      <!-- Earnings (Monthly) Card Example -->\n      <div class=\"col-xl-4 col-md-6 mb-4\">\n        <div class=\"card border-left-success shadow h-100 py-2\">\n          <div class=\"card-body\">\n            <div class=\"row no-gutters align-items-center\">\n              <div class=\"col mr-2\">\n                <div class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">Recovered</div>\n                <div class=\"h5 mb-0 font-weight-bold text-gray-800\">{{totalRecoverd}}</div>\n              </div>\n              <div class=\"col-auto\">\n                <i class=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n        <h1 class=\"h3 mb-0 text-gray-800\">CORONAVIRUS - India Cases</h1>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xl-6 col-lg-5\">\n        <div class=\"card shadow mb-4\">\n          <!-- Card Header - Dropdown -->\n          <div class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n            <h6 class=\"m-0 font-weight-bold text-primary heading-text\"> India Total cases \n            </h6>\n          </div>\n          <!-- Card Body -->\n          <div class=\"card-body card-body2\">\n            <img src=\"assets/images/tn_in-flag.gif\">\n            <div class=\"panel_front\" style=\"width:100%;height:100%;\">\n            <br>\n            <span>\n              Last Updated : {{indiaTotalCases.lastupdatedtime}}\n            </span>\n                <div class=\"number-table-main\">{{indiaTotalCases.confirmed}} <span style=\"clear: both;color: #e8b126;font-size:14px;display: block;\">[ New {{indiaTotalCases.deltaconfirmed}} ]</span></div>\n                <div style=\"font-size:13.5px\">Total Cases</div>\n                <div style=\"padding-top:20px;position:relative;text-align:center; \">\n                    <div style=\"float:left; text-align:center\">\n                        <span class=\"number-table\" style=\"color:#8080FF\">{{indiaTotalCases.recovered}}</span>\n                        <span style=\"clear: both;color: green;font-size:14px;display: block;\">[ New {{indiaTotalCases.deltarecovered}} ]</span>\n                        <div style=\"font-size:13px\">Recovered</div><br>\n                    </div>\n                    <div style=\"float:right; text-align:center\"><span class=\"number-table\" style=\"color:red \">{{indiaTotalCases.deaths}}</span>\n                      \n                        <span style=\"clear: both;color: red;font-size:14px;display: block;\">\n                        [ New {{indiaTotalCases.deltadeaths}} ]</span>\n                      <div style=\"font-size:13px\">Deaths</div><br>\n                    </div>\n                </div>\n                <div class=\"number-table-main\" style=\"clear: both;color: brown;\">{{indiaTotalCases.active}}</div>\n                <div style=\"font-size:13.5px;color: brown;\">Active Cases</div>\n                <!-- <div class=\"number-table-main\" style=\"clear: both;color: #e8b126;\">{{indiaTotalCases.deltaconfirmed}}</div>\n                <div style=\"font-size:13.5px;color: #e8b126;\">Today Cases</div>\n                <div class=\"number-table-main\" style=\"clear: both;color: red;\">{{indiaTotalCases.deltadeaths}}</div>\n                <div style=\"font-size:13.5px;color: red;\">Today Deaths</div>\n                <div class=\"number-table-main\" style=\"clear: both;color: green;\">{{indiaTotalCases.deltarecovered}}</div>\n                <div style=\"font-size:13.5px;color: green\">Today Recovered</div> -->\n                \n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-6 col-lg-5\">\n        <div id=\"accordion\">\n          <div class=\"card\" *ngFor=\"let statewiseData of statewiseData; let i=index;\">\n            <div class=\"card-header\">\n              <a class=\"card-link\" data-toggle=\"collapse\" [href]=\"'#collapse' + i\" (click)=\"getDistrict(statewiseData.state)\">\n                <div>{{statewiseData.state}} <span style=\"font-size:12px;color:red;\" *ngIf=\"statewiseData.deltaconfirmed > 0\">[new {{statewiseData.deltaconfirmed}}]</span> \n                </div>\n              </a>\n              <i class=\"arrow down\"></i>\n            </div>\n            <div [id]=\"'collapse' + i\" class=\"collapse\" data-parent=\"#accordion\">\n              <div class=\"card-body\">\n              <div class=\"main-container\">\n                <div class=\"number-table-main spacebetween\" style=\"display:inline-block; text-align:center\">\n                  <div style=\"font-size:12px;color:red;\" *ngIf=\"statewiseData.deltaconfirmed > 0\">[new {{statewiseData.deltaconfirmed}}]</div> \n                  {{statewiseData.confirmed}}\n                   <div style=\"font-size: 13.5px;\">Total Cases</div>\n                </div>\n                <div style=\"text-align:center;display:inline-block;margin\" class=\"spacebetween\">\n                  <span class=\"number-table\" style=\"color: #8080FF;\">{{statewiseData.active}}</span>\n                  <div style=\"font-size: 13px;\">Active</div>\n                </div>\n                <div style=\"text-align:center;display:inline-block\" class=\"spacebetween\">\n                  <div style=\"font-size:12px;color:green;\" *ngIf=\"statewiseData.deltarecovered > 0\">[new {{statewiseData.deltarecovered}}]</div>\n                  <div class=\"number-table\" style=\"color: green;\">{{statewiseData.recovered}}</div>\n                  <div style=\"font-size: 13px;\">Recovered</div>\n                </div>\n                <div style=\"text-align:center;display:inline-block\" class=\"spacebetween\">\n                  <div style=\"font-size:12px;color:red;\" *ngIf=\"statewiseData.deltadeaths > 0\">[new {{statewiseData.deltadeaths}}]</div>\n                  <span class=\"number-table\" style=\"color: red;\">{{statewiseData.deaths}}</span>\n                  <div style=\"font-size: 13px;\">Deaths</div></div>   \n              </div>\n                \n               <br>\n               <div class=\"table-responsive\">\n                <table class=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th>DISTRICT</th>\n                        <th>CONFIRMED</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let district of districtData; let i = index;\">\n                        <td>{{district[0]}}</td>\n                        <td><span style=\"font-size:12px;color:red;\" *ngIf=\"district[1].delta.confirmed > 0\">{{district[1].delta.confirmed}}</span> {{district[1].confirmed}}</td>\n                      </tr>\n                    </tbody>\n                </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n      <h1 class=\"h3 mb-0 text-gray-800\">CORONAVIRUS - Country wise</h1>\n    </div>\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Country</th>\n            <th>Total Cases</th>\n            <th>New Cases</th>\n            <th>Total Deaths</th>\n            <th>New Deaths</th>\n            <th>Total Recovered</th>\n            <th>Active Cases</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let country of allCountry[0]; let i = index\">\n            <td>{{i+1}}</td>\n            <td>{{country.country}}</td>\n            <td>{{country.cases}}</td>\n            <td>{{country.todayCases}}</td>\n            <td>{{country.deaths}}</td>\n            <td>{{country.todayDeaths}}</td>\n            <td>{{country.recovered}}</td>\n            <td>{{country.active}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  <br>   \n</div>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}